'use strict'
const MAX_QUANTITY_LETTERS = 50 //–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –¥–ª—è –≤–≤–æ–¥–∞ –≤ –≤–µ—Ä—Ö–Ω–µ–º –∏–Ω–ø—É—Ç–µ

const btnAddNote = document.querySelector('.note_form')
const inputTitel = document.querySelector("#input_above")
const inputContent = document.querySelector("#input_below")
const list = document.querySelector(".notes_list")
const messageContainer = document.querySelector('.messages-box');

const MOCK_NOTES = [
    {
        idNotes: 1,
        title: '–†–∞–±–æ—Ç–∞ —Å —Ñ–æ—Ä–º–∞–º–∏',
        content: '–ö –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –ø–æ–ª—è–º —Ñ–æ—Ä–º—ã –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ form.elements –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é, —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –≤ –∞—Ç—Ä–∏–±—É—Ç–µ name',
        color: 'green',
        isFavorite: false,
    },
    {
        idNotes: 2,
        title: '–†–∞–±–æ—Ç–∞ —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏',
        content: '–§—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å —Ä–∞–∑–Ω—ã—Ö –≤–∏–¥–æ–≤, –∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∏—Ö –º–æ–≥—É—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤',
        color: 'red',
        isFavorite: true,
    },
]

const model = {
    notes: MOCK_NOTES,

    addNotes(title, content, color){
        const idNotes = Number(new Date().getTime()) //—Å–æ–∑–¥–∞—é —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id
        const newNotes = {idNotes, title, content, color, isFavorite: false}
        this.notes.unshift(newNotes)
        view.renderNotes(model.notes)
        view.renderNotesCount()
    },

    deleteNotes(id){
        const indexToDel = this.notes.findIndex(note => note.idNotes === id)
        if (indexToDel !== -1){
            this.notes.splice(indexToDel, 1)
            view.renderNotes(model.notes)
            view.renderNotesCount()
        }
        return indexToDel !== -1

    }
}

const view = {
    init() {
        this.renderNotes(model.notes)

        btnAddNote.addEventListener("submit", function (event){
            event.preventDefault()
            const titel = inputTitel.value
            const content = inputContent.value
            controler.addNotes(titel, content);

            inputTitel.value = '';
            inputContent.value = '';
        })
    },

    renderNotes(notes) {
        // –Ω–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∑–∞–º–µ—Ç–æ–∫ –∏ —Ä–µ–Ω–¥–µ—Ä–∏–º –∑–∞–º–µ—Ç–∫–∏ –≤ –Ω–µ–≥–æ (–µ—Å–ª–∏ –∑–∞–º–µ—Ç–æ–∫ –Ω–µ—Ç, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–µ–∫—Å—Ç)
        const listContainer = document.querySelector(".notes_list")

        if(!listContainer){//–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞–π–¥–µ–Ω, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫.
            return;
        }
        listContainer.innerHTML = ''; //—á—Ç–æ–±—ã –∑–∞–º–µ—Ç–∫–∏ –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–ª–∏—Å—å –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏

        if (notes.length === 0){
            listContainer.innerHTML =
                 `
             <p>–£ –≤–∞—Å –µ—â—ë –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –∑–∞–º–µ—Ç–∫–∏. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª—è –≤—ã—à–µ –∏ —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é –∑–∞–º–µ—Ç–∫—É!</p>;
             `
            return;
        }

        notes.forEach(note => {
            const noteElement = document.createElement('li')
            noteElement.className = 'style_note'
            noteElement.innerHTML = `
             <h3 style = "background-color: ${note.color}">${note.title}</h3>
                <p>${note.content}</p>
                `;
            1
            // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤   –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä.
            listContainer.appendChild(noteElement);
        })

        // —Ç–∞–∫–∂–µ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–≤–µ—Å–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ

    },

    renderNotesCount(){
        const numberCount = model.notes.length
        const count = document.querySelector(".strong_number")
        count.innerHTML = numberCount
    },

    displayMessage(message, isError = false) {
        if (!messageContainer) {
            console.error("–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π (.messages-box) –Ω–µ –Ω–∞–π–¥–µ–Ω."); // –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å, –Ω–∞–ª–∏ —ç—Ç–æ –≤–æ–æ–±—â–µ, –ª–∏–±–æ –∏–∑–ª–∏—à–Ω–µ?
            return;
        }

        messageContainer.textContent = message;     // 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–µ—Ä–µ–¥–∞—ë–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è

        if (isError) {  // 2. –£–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∏–ª—è–º–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–∫–∏
            messageContainer.classList.add('error'); // üëà –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç, —á—Ç–æ –≤ CSS –µ—Å—Ç—å .error
        } else {
            messageContainer.classList.remove('error');
        }

        // 3. –î–µ–ª–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤–∏–¥–∏–º—ã–º (–µ—Å–ª–∏ –æ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–∫—Ä—ã—Ç)
        messageContainer.style.display = 'block';

        // 4. –û—á–∏—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
        setTimeout(() => {
            messageContainer.textContent = '';
            messageContainer.classList.remove('error');
            messageContainer.style.display = 'none';
        }, 3000); // –°–æ–æ–±—â–µ–Ω–∏–µ –∏—Å—á–µ–∑–Ω–µ—Ç —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    },
}

const controler = {
    addNotes(title, content){  //2 –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∞ –Ω–∏–∂–µ —Å—Ä–∞–∑—É —É –º–µ–Ω—è –≤ –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ 3 –∞—Ä–≥—É–º–µ–Ω—Ç–∞???
        const color = document.querySelector('input[name="color"]:checked')?.value || 'yellow'; //–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        if (title.trim() !== '' && content.trim() !== '' && title.length <= MAX_QUANTITY_LETTERS) {
            model.addNotes(title, content, color);
            view.displayMessage('–ó–∞–º–µ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞');
        } else {
            // –î–æ–±–∞–≤–∏–º –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            if (title.length > MAX_QUANTITY_LETTERS) {
                view.displayMessage(`–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å ${MAX_QUANTITY_LETTERS} —Å–∏–º–≤–æ–ª–æ–≤.`, true);
            } else {
                view.displayMessage('–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ç–µ–∫—Å—Ç –∑–∞–º–µ—Ç–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏.', true);
            }
        }
    }
}

function init() {
    view.init()
}

document.addEventListener('DOMContentLoaded', init);
